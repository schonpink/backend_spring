plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'war'
}

group = 'org.obrancova'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springModulithVersion', "1.1.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.modulith:spring-modulith-starter-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.google.guava:guava:32.0.0-android'
    implementation 'ch.qos.logback:logback-classic:1.4.12'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation group: 'org.owasp.encoder', name: 'encoder', version: '1.2.3'

    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

    /**
     * Utils & Logging
     */
    implementation'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor'org.mapstruct:mapstruct-processor:1.5.3.Final'

    
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
